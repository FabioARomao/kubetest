---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  labels:
    app.kubernetes.io/name: grafana
  annotations:
    prometheus.io/port: http
    prometheus.io/scrape: "true"
spec:
  revisionHistoryLimit: 1
  replicas: 1
  selector:
    matchLabels:
        app.kubernetes.io/name: grafana
  template:
    metadata:
      labels:
        app.kubernetes.io/name: grafana
    spec:
      containers:
      - name: grafana
        image: grafana/grafana:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3000
          name: http
        resources:
          requests:
            cpu: 100m
            memory: "512Mi"
          limits:
            cpu: 200m
            memory: "1Gi"
        env:
        - name: GF_SECURITY_ADMIN_USER
          valueFrom:
            secretKeyRef:
              name: grafana-secret
              key: admin-user
        - name: GF_SECURITY_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: grafana-secret
              key: admin-password
        volumeMounts:
          - name: grafana-storage
            mountPath: /var/lib/grafana/
          - name: grafana-storage
            mountPath: /var/lib/grafana/plugins
            readOnly: true
          - name: grafana-datastore
            mountPath: /etc/grafana/provisioning/datasources/datasource.yaml
            subPath: datasource.yaml
            readOnly: false
          - name: grafana-dashboards
            mountPath: /var/lib/grafana/dashboards
            subPath: dashboard-volumespv.json
          #- name: grafana-dashboard-provisioning
          #  mountPath: /etc/grafana/provisioning/dashboards
          #  subPath: dashboards.yaml
        securityContext:
          runAsUser: 0
          allowPrivilegeEscalation: false
          privileged: false
          readOnlyRootFilesystem: true
          seccompProfile:
            type: RuntimeDefault
          capabilities:
            drop:
              - ALL
      volumes:
        - name: grafana-storage
          persistentVolumeClaim:
            claimName: grafana-storage-pvc
        - name: grafana-datastore
          configMap:
            name: grafana-datasource
        - name: grafana-dashboards
          configMap:
            name: grafana-dashboards
            items:
              - key: dashboard-volumespv.json
                path: dashboard-volumespv.json